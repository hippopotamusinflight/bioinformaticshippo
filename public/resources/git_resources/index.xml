<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git Resources | BioinfoHippo</title>
    <link>/resources/git_resources/</link>
      <atom:link href="/resources/git_resources/index.xml" rel="self" type="application/rss+xml" />
    <description>Git Resources</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Ming Han Â© 2020</copyright><lastBuildDate>Sun, 09 Sep 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hubad2defad9b28ccc791e11094fae3b6d_15995_512x512_fill_lanczos_center_2.png</url>
      <title>Git Resources</title>
      <link>/resources/git_resources/</link>
    </image>
    
    <item>
      <title>Basics</title>
      <link>/resources/git_resources/basics/</link>
      <pubDate>Tue, 26 May 2020 09:55:52 -0400</pubDate>
      <guid>/resources/git_resources/basics/</guid>
      <description>&lt;!--
1. replace dirdir with page dir (e.g. r_resources)
2. replace 5 with weight, or leave blank to sort pages alphabetically
--&gt;
&lt;h2 id=&#34;setup-git&#34;&gt;setup git&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;in a project dir&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir example_repo                             create repo directory
git init                                       initialize local git repo, creates .git folder
git config --global user.name &#39;John Doe&#39;
git config --global user.email &#39;jdoe@email.com&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;create-gitignore&#34;&gt;create .gitignore&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;make sure you set up .gitignore before &lt;code&gt;git add&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vim .gitignore

   log.txt
   /dir1
   *.RMarkdown
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;git-add-rm-commit-status&#34;&gt;git add, rm, commit, status&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add file1 file2                add files to index/staging area before committing
git add file3 ...
git add *.html                     add all .html files to staging area
git add .                          add all files to staging area
git rm --cached file3              remove file from staging area

git status                         check status of working tree (what files added, modified, unmodified)
git commit                         commit files in staging area
git commit -m &#39;changed something&#39;  to add comment to commit
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;create-branches&#34;&gt;create branches&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git branch somebranch                    add a branch
git checkout somebranch                  goes into a branch

    - create/edit some files
    - commit them

git checkout master                      goes into master branch

git merge somebranch                     while in master branch, merge somebranch
git merge somebranch -m &#39;some message&#39;   to write a commit message
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;working-with-github&#34;&gt;working with GitHub&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;create new repo on GitHub&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote                               to view remote repos
git remote add origin https://github.com/username/repo
git remote remove origin
git remote -v

git push -u origin master                to push master to remote repo
                                         (github login window will open to authenticate for the first time)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;reload GitHub page and local repo should be there&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git pull          pulls latest version from remote repo
git clone         copies a remote repo into current dir
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;git-reset&#34;&gt;git reset&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;to restore previous commits&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git reflog
f322517 (HEAD -&amp;gt; master) HEAD@{0}: reset: moving to HEAD
f322517 (HEAD -&amp;gt; master) HEAD@{1}: pull https://github.com/username/repo.git: Merge made by the &#39;recursive&#39; strategy.
9a71bf1 HEAD@{2}: commit: updated gitignore
36340f8 (origin/master) HEAD@{3}: commit: updated gitignore
5f98d77 HEAD@{4}: commit (initial): initial commit

git reset --hard 5f98d77
HEAD is now at 5f98d77 website initial commit
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;lesson: add files to .gitignore before initial commit&lt;/li&gt;
&lt;li&gt;lesson: do not delete files on github, do everything with git&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;misc&#34;&gt;misc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;create SSH keys so no need to login to github every time&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;eof&#34;&gt;EOF&lt;/h2&gt;
</description>
    </item>
    
  </channel>
</rss>
